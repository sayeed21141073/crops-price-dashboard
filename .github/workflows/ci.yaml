name: Security & Code Quality (No Build)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  security_quality:
    runs-on: ubuntu-latest

    env:
      SONAR_HOST_URL: http://localhost:9000
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # ------------------------
      # Static Analysis / Code Quality with SonarQube (No Build)
      # ------------------------
      - name: SonarQube Scan (No Build)
        uses: sonarsource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.projectKey=crop-price-dashboard
            -Dsonar.organization=your-org
            -Dsonar.host.url=${{ env.SONAR_HOST_URL }}
            -Dsonar.login=${{ env.SONAR_TOKEN }}
            -Dsonar.sources=./
        continue-on-error: false

      # ------------------------
      # Dynamic Analysis (DAST) with OWASP ZAP
      # ------------------------
      - name: OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.7.0
        with:
          target: 'http://localhost:8080' # your running app URL
          format: 'html'
          output: 'zap_report.html'
          failOnError: true
